@using System.Configuration;
@using System.Resources;
@using Aexis;
@using Aexis.Web;
@using QScore.lang;
@using QBS.ACL;
@using QBS;

@* Connection, Layout, Startup Variables *@
@{
    Layout = "~/layouts/Standard/Layout.cshtml";
    string title = Text.mdl_Edit_Self_Password;
    string errorMessage = "";
}

@* Page Code *@
@{
    int currentId = SessionHandler.Id;
    Dictionary<string, bool> modules = SessionHandler.Modules;

    string pageContent = "";
    if ((currentId != 0) && (Modules.Permission(modules, Modules.EDIT_SELF_PASSWORD)))
    {
        SessionHandler.ClearHistory();
        string password = Request.Form["password"];
        string passwordConfirm = Request.Form["passwordConfirm"];
        string passwordOld = Request.Form["passwordOld"];
        if(IsPost)
        {
            string missingFields = "";
            missingFields = Common.StrAdd(missingFields, ", ", Common.MissingField(Text.CurrentPassword, passwordOld));
            missingFields = Common.StrAdd(missingFields, ", ", Common.MissingField(Text.NewPassword, password));
            missingFields = Common.StrAdd(missingFields, ", ", Common.MissingField(Text.NewPassword + " (" + Text.RepeatToConfirm + ")", passwordConfirm));
            if (missingFields != "") 
            {
                errorMessage = Text.MissingTheseFields + " " + missingFields;
            }
            if (password != passwordConfirm)
            {
                errorMessage = Common.StrAdd(errorMessage, "<br />", Text.PasswordConfirmationDoesntMatch);
            }
            User user = new User(currentId);
            if(currentId != Login.Authenticate(user.Username, passwordOld, true))
            {
                errorMessage = Text.InvalidPassword;
            }
            if(errorMessage == "")
            {
                user.Password = password;
                user.UpdatePassword(false);
                errorMessage = Text.ChangesHaveBeenSaved;
            }
        }
        pageContent += "<table width='100%'>";
        pageContent += "<tr><td align='right' width='50%'>" + Text.CurrentPassword + ":</td><td>" + DrawInput.InputPasswordField("passwordOld", "", "", "", "", "", "") + "</td></tr>";
        pageContent += "<tr><td align='right' width='50%'>" + Text.NewPassword + ":</td><td>" + DrawInput.InputPasswordField("password", "", "", "", "", "", "") + "</td></tr>";
        pageContent += "<tr><td align='right' width='50%'>" + Text.NewPassword + " (" + Text.RepeatToConfirm + "):</td><td>" + DrawInput.InputPasswordField("passwordConfirm", "", "", "", "", "", "") + "</td></tr>";
        pageContent += "<tr><td colspan='2' align='center'>" + DrawInput.InputSubmit("btnOk", Text.OK, "button", "doSubmit();", "", "") + "&nbsp;" + DrawInput.InputButton("backBtn", Text.Back, "", "goBack();", "background-image: url(./images/back.png); background-repeat: no-repeat; height: 30px; padding-left: 30px;", "") + "</td></tr>";
        pageContent += "</table>";
    }
    else
    {
        Response.Redirect(Menu.SESSION_LOST);
    }
}

@* Page Output *@

@section PageTitle { @Html.Raw(title) }
@section Subtitle { }

@section Errors {
    @{
        if (errorMessage != "")
        {
            <div class="alert">@Html.Raw(errorMessage)</div>
        }
    }
}

@section JavaScript {
    function doSubmit()
    {
        $("#classicform").submit();
    }

    function goBack()
    {
        location.href = '@Menu.MAIN_PAGE';
    }
}

@section PageContent {
    @Html.Raw(pageContent)
}

@section Menu {
    @Html.Raw(Menu.GetDropDown(modules, currentId))
}